void printkdistanceNodeDown(node *root, int k) 
{ 
   
    if (root == NULL || k < 0)  return; 
  

    if (k==0) 
    { 
        cout << root->data << endl; 
        return; 
    } 
  
    
    printkdistanceNodeDown(root->left, k-1); 
    printkdistanceNodeDown(root->right, k-1); 
} 
  

int printkdistanceNode(node* root, node* target , int k) 
{ 
   
    if (root == NULL) return -1; 
  
    
    if (root == target) 
    { 
        printkdistanceNodeDown(root, k); 
        return 0; 
    } 

    int leftd = printkdistanceNode(root->left, target, k); 
  
   
    if (leftd != -1) 
    { 
         
         if (leftd + 1 == k) 
            cout << root->data << endl; 
  
        
         else
            printkdistanceNodeDown(root->right, k-leftd-2); 
  
        
         return 1 + leftd; 
    } 
  
    
    int rightd = printkdistanceNode(root->right, target, k); 
    if (rightd != -1) 
    { 
         if (rightd + 1 == k) 
            cout << root->data << endl; 
         else
            printkdistanceNodeDown(root->left, k-rightd-2); 
         return 1 + rightd; 
    } 
  
   
    return -1; 
} 




